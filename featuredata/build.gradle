apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

apply from: rootProject.file('quality/jacoco.gradle')
apply from: rootProject.file('quality/ktlint.gradle')

android {

    compileSdkVersion buildConfig.compileSdk

    defaultConfig {

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "REST_API_URL",
                "\"http://www.mocky.io/v2/\""
    }

    buildTypes {

        debug {

            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets.androidTest.java.srcDirs += 'src/androidTest/kotlin'
    sourceSets.main.java.srcDirs += 'src/main/kotlin'
    sourceSets.test.java.srcDirs += 'src/test/kotlin'

    testOptions {

        unitTests.all {

            testLogging {
                events 'passed', 'skipped', 'failed'
            }
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(':network')

    implementation deps.android.support.appCompat

    implementation deps.kotlin.stdlib.jdk

    implementation deps.coroutines.core
    implementation deps.gson.core
    ktlint deps.ktlint.core
    implementation deps.retrofit.core
    implementation deps.retrofit.gsonconverter

    testImplementation deps.junit.core
    testImplementation deps.kotlin.test.jdk
    testImplementation deps.mockitoKotlin.core
}
